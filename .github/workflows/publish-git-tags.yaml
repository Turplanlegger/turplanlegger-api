name: Create and publish a Github tag and release

on:
  push:
    branches:
      - main
    paths:
      - turplanlegger/__about__.py

jobs:
  publish-new-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: Login for bot
        run: |
          git config --global user.email "$secrets.TURPLANLEGGER_BOT_EMAIL"
          git config --global user.name "Turplanlegger Bot"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.TAG_SIGNING_KEY_ASC }}
          passphrase: ${{ secrets.TAG_SIGNING_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Get version
        run: echo "NEW_VERSION=$(grep -v '^#' turplanlegger/__about__.py | cut -d'=' -f2 | xargs)" >> "$GITHUB_ENV"

      - name: Create new tag
        run: |
          git tag -sam "Release v$NEW_VERSION" "$NEW_VERSION"
          git push origin "$NEW_VERSION"
          echo "Tag \`$NEW_VERSION\` \`$(git rev-parse -q --verify $NEW_VERSION)\` created" >> $GITHUB_STEP_SUMMARY

      - name: Update latest tag
        run: |
          git tag -sfam "Release v$NEW_VERSION" latest
          git push --force --tags
          echo "Tag \`latest\` updated to \`$NEW_VERSION\` \`$(git rev-parse -q --verify $NEW_VERSION)\`" >> $GITHUB_STEP_SUMMARY

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ env.NEW_VERSION }}"
          tag: ${{ env.NEW_VERSION }}
          token: ${{ secrets.DEPLOY_TOKEN }}
