name: Create and publish a Github tag and release

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:

jobs:
  check-if-tag-exists:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.check_tag.outputs.NEW_VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.DEPLOY_TOKEN }}

      - name: Get version
        run: echo "VERSION=$(cat turplanlegger/__about__.py | cut -d'=' -f2 | xargs)" >> "$GITHUB_ENV"

      - name: Check if tag exists
        id: check_tag
        run: |
          git tag
          if git tag | grep "^$VERSION$"; then
            echo "Tag \`$VERSION\` already exists" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "Tag \`$VERSION\` does not exists, publishing new tag" >> "$GITHUB_STEP_SUMMARY"
            echo "NEW_VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          fi

  publish-new-tag:
    runs-on: ubuntu-latest
    needs: check-if-tag-exists
    if: needs.check-if-tag-exists.outputs.new-version
    permissions:
      contents: write
    env:
      NEW_VERSION: ${{ needs.check-if-tag-exists.outputs.new-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login for bot
        run: |
          git config --global user.email "$secrets.TURPLANLEGGER_BOT_EMAIL"
          git config --global user.name "Turplanlegger Bot"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.TAG_SIGNING_KEY_ASC }}
          passphrase: ${{ secrets.TAG_SIGNING_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create new tag
        run: |
          git tag -sam "Release v$NEW_VERSION" $NEW_VERSION
          #git push --tags
          echo "Tag \`$NEW_VERSION\` \`$(git rev-parse -q --verify $NEW_VERSION)\` created" >> $GITHUB_STEP_SUMMARY

      - name: Update latest tag
        run: |
          git tag -sfam "Release v$NEW_VERSION" latest
          #git push --force --tags
          echo "Tag \`latest\` updated to \`$NEW_VERSION\` \`$(git rev-parse -q --verify $NEW_VERSION)\`" >> $GITHUB_STEP_SUMMARY

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: "Release ${{ env.NEW_VERSION }}"
          tag: ${{ env.NEW_VERSION }}
          token: ${{ secrets.DEPLOY_TOKEN }}
