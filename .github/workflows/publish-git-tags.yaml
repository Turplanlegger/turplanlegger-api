name: Create and publish a Github tag

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - ci/*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-and-publish-new-tags:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.DEPLOY_TOKEN }}
      
      - name: Login for bot
        id: Login
        run: |
          git config --global user.email "$secrets.TURPLANLEGGER_BOT_EMAIL"
          git config --global user.name "Turplanlegger Bot"

      - name: Get tags
        run: git fetch --tags origin

      - name: Get tags from repository
        id: released_tag
        run: echo "RELEASED_VERSION=$(git tag --list | sort -V | grep -v latest | head -n 1 | xargs)" >> $GITHUB_ENV

      - name: Get repo version 
        id: new_tag
        run: echo "NEW_VERSION=$(cat turplanlegger/__about__.py | cut -d'=' -f2 | xargs)" >> $GITHUB_ENV

      - name: Check if tag exists and and fail if it does
        id: NEW_SHA
        run: git rev-parse -q --verify $NEW_VERSION && exit 1 || exit 0

      - name: Print variables
        id: echo_variables
        run: |
          echo $RELEASED_VERSION
          echo $NEW_VERSION
      
      - name: Create new tag
        id: create_tag
        run: |
          git config --global user.email "$secrets.TURPLANLEGGER_BOT_EMAIL"
          git config --global user.name "Turplanlegger Bot"
          git tag -am "Release v$NEW_VERSION" $NEW_VERSION
          git push --tags
      
      - name: Update latest tag
        id: update_latest
        run: |
          git config --global user.email "$secrets.TURPLANLEGGER_BOT_EMAIL"
          git config --global user.name "Turplanlegger Bot"
          git tag -f -am "Release v$NEW_VERSION" latest
          git push -f --tags
